// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Usuários do sistema
model User {
  id        String   @id @default(cuid())
  name      String
  email     String   @unique
  password  String
  role      String   @default("USER")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

// Contatos recebidos
model Contact {
  id        String   @id @default(cuid())
  name      String
  email     String
  phone     String?
  company   String?
  website   String?
  message   String   @db.Text
  source    String?  // De onde veio o contato
  status    String   @default("NEW")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("contacts")
}

// Assinantes da newsletter
model NewsletterSubscriber {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  source    String?  // De onde veio a inscrição
  status    String   @default("ACTIVE")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("newsletter_subscribers")
}

// Auditorias SEO realizadas
model SeoAudit {
  id          String   @id @default(cuid())
  url         String
  score       Int
  data        String   @db.Text // JSON como string
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("seo_audits")
}

// Cálculos de ROI
model RoiCalculation {
  id          String   @id @default(cuid())
  data        String   @db.Text // JSON como string
  result      String   @db.Text // JSON como string
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("roi_calculations")
}

// Posts do Blog
model Post {
  id            String   @id @default(cuid())
  slug          String   @unique
  title         String
  excerpt       String?  @db.Text
  content       String   @db.Text
  author        String
  authorImage   String?
  category      String   // "SEO Avançado" | "Desenvolvimento Web" | "Marketing Digital" | "Cases Reais"
  tags          String[] // Array de tags
  featured      Boolean  @default(false)
  published     Boolean  @default(false)
  publishedAt   DateTime?
  seoTitle      String?
  seoDescription String? @db.Text
  ogImage       String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@map("posts")
  @@index([category])
  @@index([published])
}

// Cases de Sucesso (Portfolio)
model CaseStudy {
  id          String   @id @default(cuid())
  slug        String   @unique
  title       String
  description String   @db.Text
  clientName  String?
  industry    String   // "Saúde" | "Educação" | "E-commerce" | "Jurídico" | "SaaS/Tech" | etc.
  services    String[] // Array de serviços aplicados
  technologies String[] // Array de tecnologias usadas
  challenge   String   @db.Text
  solution    String   @db.Text
  results     String   @db.Text // JSON string com métricas
  duration    String
  timeline    String?  @db.Text // Timeline opcional
  learnings   String?  @db.Text // "O que faríamos diferente"
  heroImage   String?  // URL da imagem hero (opcional)
  gallery     String[] // Array de URLs de imagens (opcional)
  gscBefore   String?  // Print do Google Search Console antes (opcional)
  gscAfter    String?  // Print do Google Search Console depois (opcional)
  ga4Before   String?  // Print do Google Analytics antes (opcional)
  ga4After    String?  // Print do Google Analytics depois (opcional)
  cwvBefore   String?  // Print dos Core Web Vitals antes (opcional)
  cwvAfter    String?  // Print dos Core Web Vitals depois (opcional)
  featured    Boolean  @default(false)
  published   Boolean  @default(true)
  publishedAt DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("case_studies")
  @@index([industry])
  @@index([published])
}